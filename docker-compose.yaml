version: "3.6"
services:

  minio:
    container_name: minio
    image: minio/minio
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 30s
      retries: 5
    volumes:
      - ${VOLUMES}/minio:/data
    command: server /data --address ':9000' --console-address ":9001"

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - ${VOLUMES}/postgresql:/var/lib/postgresql/data
    expose:
      - "5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  mlflow:
    container_name: mlflow
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    expose:
      - "5000"
    depends_on:
      - postgres
      - minio
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --serve-artifacts
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}

  mlflow-bucket-client:
    image: minio/mc
    container_name: mlflow-bucket-client
    depends_on:
      minio:
        condition: service_healthy
    tty: true
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      if ! mc ls minio | grep --quiet ${MLFLOW_BUCKET_NAME}; then
        mc mb minio/${MLFLOW_BUCKET_NAME}
      else
        echo 'bucket already exists'
      fi
      "

  proxy:
    container_name: proxy
    image: nginx:1.15.8-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./.htpasswd:/etc/apache2/.htpasswd
      - ./static:/usr/share/nginx/html/
    ports:
     - "${PORT}:80"
