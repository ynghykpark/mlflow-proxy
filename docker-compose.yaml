version: "3.6"
services:

  minio:
    container_name: minio
    image: minio/minio
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin012345
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 30s
      retries: 5
    volumes:
      - ${VOLUMES}/minio:/data
    command: server /data --address ':9000' --console-address ":9001"

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - ${VOLUMES}/postgresql:/var/lib/postgresql/data
    expose:
      - "5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: cresprit-admin

  mlflow:
    container_name: mlflow
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    expose:
      - "5000"
    depends_on:
      - postgres
      - minio
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: admin012345
    command: >
        mlflow server
          --host 0.0.0.0
          --port 5000
          --serve-artifacts
          --backend-store-uri postgresql://admin:cresprit0101@postgres:5432/db
          --artifacts-destination s3://mlflow

  mlflow-bucket-client:
    image: minio/mc
    container_name: mlflow-bucket-client
    depends_on:
      minio:
        condition: service_healthy
    tty: true
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 admin admin012345 &&
      if ! mc ls minio | grep --quiet mlflow; then
        mc mb minio/mlflow
      else
        echo 'bucket already exists'
      fi
      "

  proxy:
    container_name: proxy
    image: nginx:1.15.8-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./.htpasswd:/etc/apache2/.htpasswd
    ports:
     - "${PORT}:80"
